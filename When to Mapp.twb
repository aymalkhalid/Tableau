<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20202.20.0614.2338                               -->
<workbook source-build='2020.2.2 (20202.20.0614.2338)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapAttribution2 />
    <MapboxVectorBuiltInAndUserStyles />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='WhentoMapp' path='/workbooks' revision='1.1' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='World Indicators Extract' inline='true' name='federated.1wonegx1iieldu18uxhym0tm4o0k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='World Indicators' name='hyper.0kn6kjv0x336vi17in8g30s8ib0d'>
            <connection authentication='auth-none' author-locale='en_US' class='hyper' db-format='dataengine' dbname='Z:/DataScience/Tableau/Excercise_File/Ex_Files_Tableau10_DataSci/Exercise Files/World Indicators.tde' default-settings='yes' server='' sslmode='' username='tableau_internal_user' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='hyper.0kn6kjv0x336vi17in8g30s8ib0d' name='Extract' table='[Extract].[Extract]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='hyper.0kn6kjv0x336vi17in8g30s8ib0d' name='Extract' table='[Extract].[Extract]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Birth Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Birth Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Birth Rate</remote-alias>
            <ordinal>0</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Business Tax Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Business Tax Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Business Tax Rate</remote-alias>
            <ordinal>1</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>448</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CO2 Emissions</remote-name>
            <remote-type>3</remote-type>
            <local-name>[CO2 Emissions]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>CO2 Emissions</remote-alias>
            <ordinal>2</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1744</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>3</ordinal>
            <family>English$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>208</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Days to Start Business</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Days to Start Business]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Days to Start Business</remote-alias>
            <ordinal>4</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>127</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ease of Business</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Ease of Business]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Ease of Business</remote-alias>
            <ordinal>5</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>186</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Energy Usage</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Energy Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Energy Usage</remote-alias>
            <ordinal>6</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1722</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>GDP</remote-name>
            <remote-type>20</remote-type>
            <local-name>[GDP]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>GDP</remote-alias>
            <ordinal>7</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2495</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp % GDP</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Health Exp % GDP]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Health Exp % GDP</remote-alias>
            <ordinal>8</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>146</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Health Exp/Capita</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Health Exp/Capita]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Health Exp/Capita</remote-alias>
            <ordinal>9</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1070</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hours to do Tax</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Hours to do Tax]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Hours to do Tax</remote-alias>
            <ordinal>10</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>281</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infant Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infant Mortality Rate]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Infant Mortality Rate</remote-alias>
            <ordinal>11</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>130</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Internet Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Internet Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Internet Usage</remote-alias>
            <ordinal>12</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>709</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Lending Interest</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Lending Interest]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Lending Interest</remote-alias>
            <ordinal>13</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>352</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Female</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Life Expectancy Female]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Life Expectancy Female</remote-alias>
            <ordinal>14</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>50</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Life Expectancy Male</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Life Expectancy Male]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Life Expectancy Male</remote-alias>
            <ordinal>15</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>48</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mobile Phone Usage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mobile Phone Usage]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Mobile Phone Usage</remote-alias>
            <ordinal>16</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1179</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Number of Records</remote-name>
            <remote-type>2</remote-type>
            <local-name>[Number of Records]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Number of Records</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 0-14</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 0-14]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 0-14</remote-alias>
            <ordinal>18</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>377</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 15-64</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 15-64]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 15-64</remote-alias>
            <ordinal>19</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>299</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population 65+</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population 65+]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population 65+</remote-alias>
            <ordinal>20</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>209</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Population Total]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population Total</remote-alias>
            <ordinal>21</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>2699</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population Urban</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Population Urban]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Population Urban</remote-alias>
            <ordinal>22</ordinal>
            <family>English$</family>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>823</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>23</ordinal>
            <family>English$</family>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>6</approx-count>
            <contains-null>false</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Inbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Inbound]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tourism Inbound</remote-alias>
            <ordinal>24</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1651</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Tourism Outbound</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Tourism Outbound]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Tourism Outbound</remote-alias>
            <ordinal>25</ordinal>
            <family>English$</family>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <approx-count>1458</approx-count>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Year</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Year]</local-name>
            <parent-name>[Extract]</parent-name>
            <remote-alias>Year</remote-alias>
            <ordinal>26</ordinal>
            <family>English$</family>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <approx-count>13</approx-count>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Canada, Germany, Iran, Islamic Rep. and 2 more&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Iran, Islamic Rep.&quot;</value>
            <value>&quot;Korea, Rep.&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;China, India, Japan and 2 more&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Albania, Algeria and 122 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Austria&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Belarus&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Benin&quot;</value>
            <value>&quot;Bosnia and Herzegovina&quot;</value>
            <value>&quot;Botswana&quot;</value>
            <value>&quot;Bulgaria&quot;</value>
            <value>&quot;Burkina Faso&quot;</value>
            <value>&quot;Burundi&quot;</value>
            <value>&quot;Cameroon&quot;</value>
            <value>&quot;Central African Republic&quot;</value>
            <value>&quot;Chad&quot;</value>
            <value>&quot;Comoros&quot;</value>
            <value>&quot;Congo, Dem. Rep.&quot;</value>
            <value>&quot;Congo, Rep.&quot;</value>
            <value>&quot;Cote d&apos;Ivoire&quot;</value>
            <value>&quot;Croatia&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;Czech Republic&quot;</value>
            <value>&quot;Denmark&quot;</value>
            <value>&quot;Djibouti&quot;</value>
            <value>&quot;Egypt, Arab Rep.&quot;</value>
            <value>&quot;Equatorial Guinea&quot;</value>
            <value>&quot;Eritrea&quot;</value>
            <value>&quot;Estonia&quot;</value>
            <value>&quot;Ethiopia&quot;</value>
            <value>&quot;Faeroe Islands&quot;</value>
            <value>&quot;Finland&quot;</value>
            <value>&quot;France&quot;</value>
            <value>&quot;Gabon&quot;</value>
            <value>&quot;Gambia, The&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Germany&quot;</value>
            <value>&quot;Ghana&quot;</value>
            <value>&quot;Greece&quot;</value>
            <value>&quot;Guinea&quot;</value>
            <value>&quot;Guinea-Bissau&quot;</value>
            <value>&quot;Hungary&quot;</value>
            <value>&quot;Iceland&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Iran, Islamic Rep.&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Ireland&quot;</value>
            <value>&quot;Isle of Man&quot;</value>
            <value>&quot;Israel&quot;</value>
            <value>&quot;Italy&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kazakhstan&quot;</value>
            <value>&quot;Kenya&quot;</value>
            <value>&quot;Kosovo&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyz Republic&quot;</value>
            <value>&quot;Latvia&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Lesotho&quot;</value>
            <value>&quot;Liberia&quot;</value>
            <value>&quot;Libya&quot;</value>
            <value>&quot;Liechtenstein&quot;</value>
            <value>&quot;Lithuania&quot;</value>
            <value>&quot;Luxembourg&quot;</value>
            <value>&quot;Macedonia, FYR&quot;</value>
            <value>&quot;Madagascar&quot;</value>
            <value>&quot;Malawi&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mali&quot;</value>
            <value>&quot;Malta&quot;</value>
            <value>&quot;Mauritania&quot;</value>
            <value>&quot;Mauritius&quot;</value>
            <value>&quot;Moldova&quot;</value>
            <value>&quot;Monaco&quot;</value>
            <value>&quot;Montenegro&quot;</value>
            <value>&quot;Morocco&quot;</value>
            <value>&quot;Mozambique&quot;</value>
            <value>&quot;Namibia&quot;</value>
            <value>&quot;Netherlands&quot;</value>
            <value>&quot;Niger&quot;</value>
            <value>&quot;Nigeria&quot;</value>
            <value>&quot;Norway&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Poland&quot;</value>
            <value>&quot;Portugal&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Romania&quot;</value>
            <value>&quot;Rwanda&quot;</value>
            <value>&quot;San Marino&quot;</value>
            <value>&quot;Sao Tome and Principe&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Senegal&quot;</value>
            <value>&quot;Serbia&quot;</value>
            <value>&quot;Seychelles&quot;</value>
            <value>&quot;Sierra Leone&quot;</value>
            <value>&quot;Slovak Republic&quot;</value>
            <value>&quot;Slovenia&quot;</value>
            <value>&quot;Somalia&quot;</value>
            <value>&quot;South Africa&quot;</value>
            <value>&quot;South Sudan&quot;</value>
            <value>&quot;Spain&quot;</value>
            <value>&quot;Sudan&quot;</value>
            <value>&quot;Swaziland&quot;</value>
            <value>&quot;Sweden&quot;</value>
            <value>&quot;Switzerland&quot;</value>
            <value>&quot;Syrian Arab Republic&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Tanzania&quot;</value>
            <value>&quot;Togo&quot;</value>
            <value>&quot;Tunisia&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;Turkmenistan&quot;</value>
            <value>&quot;Uganda&quot;</value>
            <value>&quot;Ukraine&quot;</value>
            <value>&quot;United Arab Emirates&quot;</value>
            <value>&quot;United Kingdom&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Yemen, Rep.&quot;</value>
            <value>&quot;Zambia&quot;</value>
            <value>&quot;Zimbabwe&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;American Samoa, Australia, Fiji and 13 more&quot;'>
            <value>&quot;American Samoa&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Fiji&quot;</value>
            <value>&quot;French Polynesia&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Kiribati&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;New Caledonia&quot;</value>
            <value>&quot;New Zealand&quot;</value>
            <value>&quot;Papua New Guinea&quot;</value>
            <value>&quot;Samoa&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Solomon Islands&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Tonga&quot;</value>
            <value>&quot;Vanuatu&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Antigua and Barbuda, Argentina, Aruba and 32 more&quot;'>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Bahamas, The&quot;</value>
            <value>&quot;Barbados&quot;</value>
            <value>&quot;Bermuda&quot;</value>
            <value>&quot;Bolivia&quot;</value>
            <value>&quot;Brazil&quot;</value>
            <value>&quot;Cayman Islands&quot;</value>
            <value>&quot;Chile&quot;</value>
            <value>&quot;Colombia&quot;</value>
            <value>&quot;Cuba&quot;</value>
            <value>&quot;Curacao&quot;</value>
            <value>&quot;Dominica&quot;</value>
            <value>&quot;Dominican Republic&quot;</value>
            <value>&quot;Ecuador&quot;</value>
            <value>&quot;Grenada&quot;</value>
            <value>&quot;Guyana&quot;</value>
            <value>&quot;Haiti&quot;</value>
            <value>&quot;Jamaica&quot;</value>
            <value>&quot;Panama&quot;</value>
            <value>&quot;Paraguay&quot;</value>
            <value>&quot;Peru&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Sint Maarten (Dutch part)&quot;</value>
            <value>&quot;St. Kitts and Nevis&quot;</value>
            <value>&quot;St. Lucia&quot;</value>
            <value>&quot;St. Martin (French part)&quot;</value>
            <value>&quot;St. Vincent and the Grenadines&quot;</value>
            <value>&quot;Suriname&quot;</value>
            <value>&quot;Trinidad and Tobago&quot;</value>
            <value>&quot;Turks and Caicos Islands&quot;</value>
            <value>&quot;Uruguay&quot;</value>
            <value>&quot;Venezuela, RB&quot;</value>
            <value>&quot;Virgin Islands (U.S.)&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Bangladesh, Bhutan, Brunei Darussalam and 21 more&quot;'>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Brunei Darussalam&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;El Salvador&quot;</value>
            <value>&quot;Guam&quot;</value>
            <value>&quot;Guatemala&quot;</value>
            <value>&quot;Hong Kong SAR, China&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Korea, Dem. Rep.&quot;</value>
            <value>&quot;Korea, Rep.&quot;</value>
            <value>&quot;Lao PDR&quot;</value>
            <value>&quot;Macao SAR, China&quot;</value>
            <value>&quot;Marshall Islands&quot;</value>
            <value>&quot;Mexico&quot;</value>
            <value>&quot;Micronesia, Fed. Sts.&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Russian Federation&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Canada &amp; United States&quot;'>
            <value>&quot;Canada&quot;</value>
            <value>&quot;United States&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Extract' datatype='table' name='[__tableau_internal_object_id__].[Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[Country (group) 1]' type='palette'>
            <map to='#ae123a'>
              <bucket>&quot;China, India, Japan and 2 more&quot;</bucket>
            </map>
            <map to='#f05c4d'>
              <bucket>&quot;Canada, Germany, Iran, Islamic Rep. and 2 more&quot;</bucket>
            </map>
            <map to='#ffbeb2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh, Bhutan, Brunei Darussalam and 21 more&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;American Samoa, Australia, Fiji and 13 more&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Antigua and Barbuda, Argentina, Aruba and 32 more&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Canada &amp; United States&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Afghanistan, Albania, Algeria and 122 more&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Extract' id='Extract (Extract.Extract)_E6BE68C1630B4709B717004A3A310614'>
            <properties context=''>
              <relation connection='hyper.0kn6kjv0x336vi17in8g30s8ib0d' name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.0vswnzv1j44zum19yzm1r0ax0ovl' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0myowie1pq9ljj18ocb6v0c2i6fe'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='Z:/DataScience/Tableau/Excercise_File/Ex_Files_Tableau10_DataSci/Exercise Files/02_01/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0myowie1pq9ljj18ocb6v0c2i6fe' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0myowie1pq9ljj18ocb6v0c2i6fe' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[State]' new-bin='true'>
          <bin default-name='true' value='&quot;Alabama, Connecticut, Delaware and 23 more&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Arizona, Arkansas, California and 10 more&quot;'>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Utah&quot;</value>
          </bin>
          <bin default-name='true' value='&quot;Idaho, Iowa, Minnesota and 7 more&quot;'>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_4337B1261D4B4D1697ED3730AEDE601D]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/khana/OneDrive/Documents/My Tableau Repository/Datasources/Orders (Sample - Superstore).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='07/25/2020 12:24:56 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Orders (Sample - Superstore)' increment-value='%null%' refresh-type='create' rows-inserted='9994' timestamp-start='2020-07-25 12:24:56.296' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Row ID</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Row ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Row ID</remote-alias>
              <ordinal>0</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9994</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Order ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order ID</remote-alias>
              <ordinal>1</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3173</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Order Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Order Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Order Date</remote-alias>
              <ordinal>2</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1392</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Ship Date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Date</remote-alias>
              <ordinal>3</ordinal>
              <family>Orders</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1487</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Ship Mode</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Ship Mode]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Ship Mode</remote-alias>
              <ordinal>4</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer ID</remote-alias>
              <ordinal>5</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Customer Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Customer Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Customer Name</remote-alias>
              <ordinal>6</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1048</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Segment</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Segment]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Segment</remote-alias>
              <ordinal>7</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>8</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>9</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>500</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>10</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>51</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Postal Code</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Postal Code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Postal Code</remote-alias>
              <ordinal>11</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Region</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Region]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Region</remote-alias>
              <ordinal>12</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product ID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product ID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product ID</remote-alias>
              <ordinal>13</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2051</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Category</remote-alias>
              <ordinal>14</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sub-Category</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Sub-Category]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sub-Category</remote-alias>
              <ordinal>15</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Product Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Product Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Product Name</remote-alias>
              <ordinal>16</ordinal>
              <family>Orders</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2025</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sales</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Sales]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sales</remote-alias>
              <ordinal>17</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3481</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Quantity</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Quantity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Quantity</remote-alias>
              <ordinal>18</ordinal>
              <family>Orders</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Discount</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Discount]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Discount</remote-alias>
              <ordinal>19</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>11</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Profit</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Profit]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Profit</remote-alias>
              <ordinal>20</ordinal>
              <family>Orders</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3859</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_4337B1261D4B4D1697ED3730AEDE601D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[State (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colorado, Idaho, Iowa and 12 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Idaho, Iowa, Minnesota and 7 more&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arizona, Arkansas, California and 10 more&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Arizona, Arkansas, California and 4 more&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Alabama, Connecticut, Delaware and 23 more&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_4337B1261D4B4D1697ED3730AEDE601D'>
            <properties context=''>
              <relation connection='excel-direct.0myowie1pq9ljj18ocb6v0c2i6fe' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource inline='true' name='Decimal' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiYXltYWwta2hhbGlkIiwiYSI6ImNrZDJ3M3hpZzFodDYyeHF5OGltZTBtYzAifQ.o4YyeQ994pg3wjdjWnqSNQ' class='CustomMapbox' description='' full-url='' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/aymal-khalid/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYXltYWwta2hhbGlkIiwiYSI6ImNrZDJ3M3hpZzFodDYyeHF5OGltZTBtYzAifQ.o4YyeQ994pg3wjdjWnqSNQ' username='aymal-khalid' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Decimal' name='ckd2xk8nd096r1io6d6titrrl' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='Decimal' name='mapbox://styles/aymal-khalid/ckd2xk8nd096r1io6d6titrrl' wait-tile-color='#dddddd'>
          <map-layer-style name='Decimal' request-string='ckd2xk8nd096r1io6d6titrrl' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/aymal-khalid/ckd2xk8nd096r1io6d6titrrl' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
    <mapsource name='Tableau' />
    <mapsource inline='true' name='MonoChrome' source-platform='win' version='18.1'>
      <connection api-key='pk.eyJ1IjoiYXltYWwta2hhbGlkIiwiYSI6ImNrZDJ3M3hpZzFodDYyeHF5OGltZTBtYzAifQ.o4YyeQ994pg3wjdjWnqSNQ' class='CustomMapbox' description='' full-url='' inline='true' offline='' port='443' server='https://api.mapbox.com' url='styles/v1' url-format='/styles/v1/aymal-khalid/{L}/tiles/{Z}/{X}/{Y}{D}?access_token=pk.eyJ1IjoiYXltYWwta2hhbGlkIiwiYSI6ImNrZDJ3M3hpZzFodDYyeHF5OGltZTBtYzAifQ.o4YyeQ994pg3wjdjWnqSNQ' username='aymal-khalid' wait-tile-color='#dddddd' />
      <languages />
      <layers>
        <layer display-name='Monochrome' name='ckd2wvgp03djx1il8ftomv0vs' show-ui='true' type='features' />
      </layers>
      <properties />
      <map-styles>
        <map-style display-name='MonoChrome' name='mapbox://styles/aymal-khalid/ckd2wvgp03djx1il8ftomv0vs' wait-tile-color='#dddddd'>
          <map-layer-style name='Monochrome' request-string='ckd2wvgp03djx1il8ftomv0vs' />
        </map-style>
      </map-styles>
      <mapsource-defaults version='18.1'>
        <style>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/aymal-khalid/ckd2wvgp03djx1il8ftomv0vs' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
      </mapsource-defaults>
      <map-attribution copyright-string='© %1 Mapbox' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© Mapbox' />
      <map-attribution2 copyright-string='© OpenStreetMap' copyright-url='https://mapbox.com/about/maps' short-copyright-string='© OSM' />
    </mapsource>
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='C02 Emission By Country ' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country (group) 1' />
        <param name='target' value='C02 Emission By Country ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='BirthRateByCountry'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators Extract' name='federated.1wonegx1iieldu18uxhym0tm4o0k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wonegx1iieldu18uxhym0tm4o0k'>
            <column datatype='real' name='[Birth Rate]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[GDP]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Birth Rate]' derivation='Sum' name='[sum:Birth Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[GDP]' derivation='Sum' name='[sum:GDP:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]' field-type='quantitative' max='32980193.137532819' min='-21992396.612371407' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]' field-type='quantitative' max='19788894.392277703' min='-11933882.276579944' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Birth Rate:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#0d0104</color>
                <color>#1f050b</color>
                <color>#320c15</color>
                <color>#441622</color>
                <color>#572330</color>
                <color>#693441</color>
                <color>#7c4855</color>
                <color>#8e5e6a</color>
                <color>#a17882</color>
                <color>#b3959d</color>
                <color>#c6b5b9</color>
                <color>#d9d9d9</color>
                <color>#dbc7c7</color>
                <color>#ddb5b6</color>
                <color>#e0a2a3</color>
                <color>#e29091</color>
                <color>#e47c7e</color>
                <color>#e7696b</color>
                <color>#e95457</color>
                <color>#eb4043</color>
                <color>#ee2b2e</color>
                <color>#f01519</color>
                <color>#f30004</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Birth Rate:qk]' />
              <lod column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]' />
              <lod column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:GDP:qk]' />
              <geometry column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]</rows>
        <cols>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{316B56B2-FA74-42CE-B3BE-C91EBBEFCA99}' />
    </worksheet>
    <worksheet name='C02 Emission By Country '>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators Extract' name='federated.1wonegx1iieldu18uxhym0tm4o0k' />
          </datasources>
          <datasource-dependencies datasource='federated.1wonegx1iieldu18uxhym0tm4o0k'>
            <column datatype='integer' name='[CO2 Emissions]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country (group) 1]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Canada, Germany, Iran, Islamic Rep. and 2 more&quot;'>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Iran, Islamic Rep.&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;China, India, Japan and 2 more&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='Attribute' name='[attr:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2 Emissions]' derivation='Sum' name='[sum:CO2 Emissions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:CO2 Emissions:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Country (group) 1]' />
              <lod column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:CO2 Emissions:qk]' />
              <tooltip column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[attr:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]</rows>
        <cols>[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:CO2 Emissions:qk]</cols>
      </table>
      <simple-id uuid='{FA795335-14E4-4794-81BC-27EE520931F6}' />
    </worksheet>
    <worksheet name='Co2 Emission By Country'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators Extract' name='federated.1wonegx1iieldu18uxhym0tm4o0k' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wonegx1iieldu18uxhym0tm4o0k'>
            <column datatype='integer' name='[CO2 Emissions]' role='measure' type='quantitative' />
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[CO2 Emissions]' derivation='Sum' name='[sum:CO2 Emissions:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]' field-type='quantitative' max='38308531.935730524' min='-45478369.360472031' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]' field-type='quantitative' max='28148918.54544168' min='-20201598.861275248' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:CO2 Emissions:qk]' />
              <lod column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]' />
              <geometry column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]</rows>
        <cols>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{4BA91131-6D44-420A-877C-80548A2075CE}' />
    </worksheet>
    <worksheet name='Custom Terrotries'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0vswnzv1j44zum19yzm1r0ax0ovl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vswnzv1j44zum19yzm1r0ax0ovl'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[State]' new-bin='true'>
                <bin default-name='true' value='&quot;Alabama, Connecticut, Delaware and 23 more&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Arizona, Arkansas, California and 10 more&quot;'>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Utah&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Idaho, Iowa, Minnesota and 7 more&quot;'>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]' />
              <tooltip column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' />
              <geometry column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Geometry (generated)]' />
              <color column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[State (group)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Latitude (generated)]</rows>
        <cols>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{85668DA4-505D-4A2D-8BC6-86073907B436}' />
    </worksheet>
    <worksheet name='MappingChallenge'>
      <table>
        <view>
          <datasources>
            <datasource caption='World Indicators Extract' name='federated.1wonegx1iieldu18uxhym0tm4o0k' />
          </datasources>
          <mapsources>
            <mapsource name='Decimal' />
          </mapsources>
          <datasource-dependencies datasource='federated.1wonegx1iieldu18uxhym0tm4o0k'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan, Albania, Algeria and 122 more&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Albania&quot;</value>
                  <value>&quot;Algeria&quot;</value>
                  <value>&quot;Andorra&quot;</value>
                  <value>&quot;Angola&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Austria&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Belarus&quot;</value>
                  <value>&quot;Belgium&quot;</value>
                  <value>&quot;Benin&quot;</value>
                  <value>&quot;Bosnia and Herzegovina&quot;</value>
                  <value>&quot;Botswana&quot;</value>
                  <value>&quot;Bulgaria&quot;</value>
                  <value>&quot;Burkina Faso&quot;</value>
                  <value>&quot;Burundi&quot;</value>
                  <value>&quot;Cameroon&quot;</value>
                  <value>&quot;Central African Republic&quot;</value>
                  <value>&quot;Chad&quot;</value>
                  <value>&quot;Comoros&quot;</value>
                  <value>&quot;Congo, Dem. Rep.&quot;</value>
                  <value>&quot;Congo, Rep.&quot;</value>
                  <value>&quot;Cote d&apos;Ivoire&quot;</value>
                  <value>&quot;Croatia&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;Czech Republic&quot;</value>
                  <value>&quot;Denmark&quot;</value>
                  <value>&quot;Djibouti&quot;</value>
                  <value>&quot;Egypt, Arab Rep.&quot;</value>
                  <value>&quot;Equatorial Guinea&quot;</value>
                  <value>&quot;Eritrea&quot;</value>
                  <value>&quot;Estonia&quot;</value>
                  <value>&quot;Ethiopia&quot;</value>
                  <value>&quot;Faeroe Islands&quot;</value>
                  <value>&quot;Finland&quot;</value>
                  <value>&quot;France&quot;</value>
                  <value>&quot;Gabon&quot;</value>
                  <value>&quot;Gambia, The&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Germany&quot;</value>
                  <value>&quot;Ghana&quot;</value>
                  <value>&quot;Greece&quot;</value>
                  <value>&quot;Guinea&quot;</value>
                  <value>&quot;Guinea-Bissau&quot;</value>
                  <value>&quot;Hungary&quot;</value>
                  <value>&quot;Iceland&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Iran, Islamic Rep.&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Ireland&quot;</value>
                  <value>&quot;Isle of Man&quot;</value>
                  <value>&quot;Israel&quot;</value>
                  <value>&quot;Italy&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kazakhstan&quot;</value>
                  <value>&quot;Kenya&quot;</value>
                  <value>&quot;Kosovo&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyz Republic&quot;</value>
                  <value>&quot;Latvia&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Lesotho&quot;</value>
                  <value>&quot;Liberia&quot;</value>
                  <value>&quot;Libya&quot;</value>
                  <value>&quot;Liechtenstein&quot;</value>
                  <value>&quot;Lithuania&quot;</value>
                  <value>&quot;Luxembourg&quot;</value>
                  <value>&quot;Macedonia, FYR&quot;</value>
                  <value>&quot;Madagascar&quot;</value>
                  <value>&quot;Malawi&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mali&quot;</value>
                  <value>&quot;Malta&quot;</value>
                  <value>&quot;Mauritania&quot;</value>
                  <value>&quot;Mauritius&quot;</value>
                  <value>&quot;Moldova&quot;</value>
                  <value>&quot;Monaco&quot;</value>
                  <value>&quot;Montenegro&quot;</value>
                  <value>&quot;Morocco&quot;</value>
                  <value>&quot;Mozambique&quot;</value>
                  <value>&quot;Namibia&quot;</value>
                  <value>&quot;Netherlands&quot;</value>
                  <value>&quot;Niger&quot;</value>
                  <value>&quot;Nigeria&quot;</value>
                  <value>&quot;Norway&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Poland&quot;</value>
                  <value>&quot;Portugal&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Romania&quot;</value>
                  <value>&quot;Rwanda&quot;</value>
                  <value>&quot;San Marino&quot;</value>
                  <value>&quot;Sao Tome and Principe&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Senegal&quot;</value>
                  <value>&quot;Serbia&quot;</value>
                  <value>&quot;Seychelles&quot;</value>
                  <value>&quot;Sierra Leone&quot;</value>
                  <value>&quot;Slovak Republic&quot;</value>
                  <value>&quot;Slovenia&quot;</value>
                  <value>&quot;Somalia&quot;</value>
                  <value>&quot;South Africa&quot;</value>
                  <value>&quot;South Sudan&quot;</value>
                  <value>&quot;Spain&quot;</value>
                  <value>&quot;Sudan&quot;</value>
                  <value>&quot;Swaziland&quot;</value>
                  <value>&quot;Sweden&quot;</value>
                  <value>&quot;Switzerland&quot;</value>
                  <value>&quot;Syrian Arab Republic&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Tanzania&quot;</value>
                  <value>&quot;Togo&quot;</value>
                  <value>&quot;Tunisia&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;Turkmenistan&quot;</value>
                  <value>&quot;Uganda&quot;</value>
                  <value>&quot;Ukraine&quot;</value>
                  <value>&quot;United Arab Emirates&quot;</value>
                  <value>&quot;United Kingdom&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Yemen, Rep.&quot;</value>
                  <value>&quot;Zambia&quot;</value>
                  <value>&quot;Zimbabwe&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;American Samoa, Australia, Fiji and 13 more&quot;'>
                  <value>&quot;American Samoa&quot;</value>
                  <value>&quot;Australia&quot;</value>
                  <value>&quot;Fiji&quot;</value>
                  <value>&quot;French Polynesia&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Kiribati&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;New Caledonia&quot;</value>
                  <value>&quot;New Zealand&quot;</value>
                  <value>&quot;Papua New Guinea&quot;</value>
                  <value>&quot;Samoa&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Solomon Islands&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Tonga&quot;</value>
                  <value>&quot;Vanuatu&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Antigua and Barbuda, Argentina, Aruba and 32 more&quot;'>
                  <value>&quot;Antigua and Barbuda&quot;</value>
                  <value>&quot;Argentina&quot;</value>
                  <value>&quot;Aruba&quot;</value>
                  <value>&quot;Bahamas, The&quot;</value>
                  <value>&quot;Barbados&quot;</value>
                  <value>&quot;Bermuda&quot;</value>
                  <value>&quot;Bolivia&quot;</value>
                  <value>&quot;Brazil&quot;</value>
                  <value>&quot;Cayman Islands&quot;</value>
                  <value>&quot;Chile&quot;</value>
                  <value>&quot;Colombia&quot;</value>
                  <value>&quot;Cuba&quot;</value>
                  <value>&quot;Curacao&quot;</value>
                  <value>&quot;Dominica&quot;</value>
                  <value>&quot;Dominican Republic&quot;</value>
                  <value>&quot;Ecuador&quot;</value>
                  <value>&quot;Grenada&quot;</value>
                  <value>&quot;Guyana&quot;</value>
                  <value>&quot;Haiti&quot;</value>
                  <value>&quot;Jamaica&quot;</value>
                  <value>&quot;Panama&quot;</value>
                  <value>&quot;Paraguay&quot;</value>
                  <value>&quot;Peru&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Sint Maarten (Dutch part)&quot;</value>
                  <value>&quot;St. Kitts and Nevis&quot;</value>
                  <value>&quot;St. Lucia&quot;</value>
                  <value>&quot;St. Martin (French part)&quot;</value>
                  <value>&quot;St. Vincent and the Grenadines&quot;</value>
                  <value>&quot;Suriname&quot;</value>
                  <value>&quot;Trinidad and Tobago&quot;</value>
                  <value>&quot;Turks and Caicos Islands&quot;</value>
                  <value>&quot;Uruguay&quot;</value>
                  <value>&quot;Venezuela, RB&quot;</value>
                  <value>&quot;Virgin Islands (U.S.)&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Bangladesh, Bhutan, Brunei Darussalam and 21 more&quot;'>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Brunei Darussalam&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;El Salvador&quot;</value>
                  <value>&quot;Guam&quot;</value>
                  <value>&quot;Guatemala&quot;</value>
                  <value>&quot;Hong Kong SAR, China&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Korea, Dem. Rep.&quot;</value>
                  <value>&quot;Korea, Rep.&quot;</value>
                  <value>&quot;Lao PDR&quot;</value>
                  <value>&quot;Macao SAR, China&quot;</value>
                  <value>&quot;Marshall Islands&quot;</value>
                  <value>&quot;Mexico&quot;</value>
                  <value>&quot;Micronesia, Fed. Sts.&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Russian Federation&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
                <bin default-name='true' value='&quot;Canada &amp; United States&quot;'>
                  <value>&quot;Canada&quot;</value>
                  <value>&quot;United States&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Hours to do Tax]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Tourism Inbound]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hours to do Tax]' derivation='Sum' name='[sum:Hours to do Tax:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Tourism Inbound]' derivation='Sum' name='[sum:Tourism Inbound:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]' field-type='quantitative' max='19783485.856969006' min='-4243895.3118439503' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]' field-type='quantitative' max='7713395.3430285659' min='-6151973.7477026461' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='map-style' value='mapbox://styles/aymal-khalid/ckd2xk8nd096r1io6d6titrrl' />
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <size column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Hours to do Tax:qk]' />
              <lod column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]' />
              <tooltip column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Tourism Inbound:qk]' />
              <color column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Country (group)]' />
              <geometry column='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Latitude (generated)]</rows>
        <cols>[federated.1wonegx1iieldu18uxhym0tm4o0k].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{D13DD9E5-C51C-4196-8107-E6B4C72D3676}' />
    </worksheet>
    <worksheet name='Maps Using MapBox'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0vswnzv1j44zum19yzm1r0ax0ovl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vswnzv1j44zum19yzm1r0ax0ovl'>
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Longitude (generated)]' field-type='quantitative' max='-4691160.6283579543' min='-14920346.103810485' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Latitude (generated)]' field-type='quantitative' max='8492773.3683292884' min='2589864.8857856239' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='background' value='false' />
            <format attr='enabled' id='barrier_line-land-polygon' value='false' />
            <format attr='enabled' id='barrier_line-land-line' value='false' />
            <format attr='enabled' id='national_park' value='false' />
            <format attr='enabled' id='pitch' value='false' />
            <format attr='enabled' id='industrial' value='false' />
            <format attr='enabled' id='built-up-area' value='false' />
            <format attr='enabled' id='water' value='false' />
            <format attr='enabled' id='waterway-river-canal' value='false' />
            <format attr='enabled' id='aeroway-polygon' value='false' />
            <format attr='enabled' id='aeroway-runway' value='false' />
            <format attr='enabled' id='aeroway-taxiway' value='false' />
            <format attr='enabled' id='Area Code Labels' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='true' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='dark' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <encodings>
              <color column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:Region:nk]' />
              <size column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' />
              <lod column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value='square' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Latitude (generated)]</rows>
        <cols>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{503F7315-3A53-452B-809A-C7F9268F9DA8}' />
    </worksheet>
    <worksheet name='State Sales'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0vswnzv1j44zum19yzm1r0ax0ovl' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0vswnzv1j44zum19yzm1r0ax0ovl'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Latitude (generated)]' field-type='quantitative' max='7475779.2261438519' min='1998233.0337181902' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Longitude (generated)]' field-type='quantitative' max='-4509519.2183783296' min='-14001591.832815364' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' num-steps='4' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' />
              <text column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]' />
              <geometry column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Latitude (generated)]</rows>
        <cols>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{325F19C7-638D-4B43-A129-2A2B17B7394D}' />
    </worksheet>
    <worksheet name='State Sales Bar'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.0vswnzv1j44zum19yzm1r0ax0ovl' />
          </datasources>
          <datasource-dependencies datasource='federated.0vswnzv1j44zum19yzm1r0ax0ovl'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]</rows>
        <cols>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{30587587-DD33-4E90-8853-2F115387DCA6}' />
    </worksheet>
  </worksheets>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='State Sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D363ACD6-24F6-4109-A3E2-B229175AB863}' />
    </window>
    <window class='worksheet' name='State Sales Bar'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A05E00E1-9A1E-41F8-A700-E3553BF42B95}' />
    </window>
    <window class='worksheet' name='Co2 Emission By Country'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:CO2 Emissions:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EA0A240E-E084-416A-83A5-25B3CEA69F86}' />
    </window>
    <window class='worksheet' name='C02 Emission By Country '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Country (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0F65A074-57A6-4016-BD8F-2B5112E80379}' />
    </window>
    <window class='worksheet' name='BirthRateByCountry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Birth Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{81FB5597-F71C-4074-A1FC-A8FF2B7C0F37}' />
    </window>
    <window class='worksheet' name='Maps Using MapBox'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[sum:Sales:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:Region:nk]' type='color' />
            <card pane-specification-id='0' type='map' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{16F39D2E-2D3A-4D0E-A0F5-B7E250442C38}' />
    </window>
    <window class='worksheet' name='Custom Terrotries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:Country:nk]</field>
            <field>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:Region:nk]</field>
            <field>[federated.0vswnzv1j44zum19yzm1r0ax0ovl].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A9B4963-1311-495F-9E2D-E0F09533409E}' />
    </window>
    <window class='worksheet' name='MappingChallenge'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wonegx1iieldu18uxhym0tm4o0k].[Country (group)]' type='color' />
            <card pane-specification-id='0' param='[federated.1wonegx1iieldu18uxhym0tm4o0k].[sum:Hours to do Tax:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wonegx1iieldu18uxhym0tm4o0k].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='8' />
      </viewpoint>
      <simple-id uuid='{DC906C30-D7C8-4905-956F-8C49E8CF8F92}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='BirthRateByCountry' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='C02 Emission By Country ' width='192'>
      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
      /wHTz8Rm2/bTnAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Co2 Emission By Country' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Custom Terrotries' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO192Zfk1nnf715sBdTSVb337DPchiI5IkWKokRRoiyakmPJymKfnCwnyUOe
      c05ecvK/5CEPSU7sPDhOIke2FNqWZUuWTdHkUFyG5Mz0zHT3dPf0VjsK281D9UXfQgEoAIXq
      ruH077A5VSjg4uLi++799kt2dnYYIQS2bcPzPISBEDLwmTE2cJwf49/574wx/zNH8LvYXvB+
      4nGxD8H7R30Wrxc/U0rRbrdRLBYH+ipeL7Y3CsH+R8HzPBBCQClN3G6afuQNQgh6vR5UVY19
      l+J48T5rmgbP8+A4zsAYizQDAIZhgFIKxhg6nQ4cxxl4ZkopTNOEqqqZniGKtjhkWZZhGAYY
      Y7BtG71eD7Ztx75U8QVSSocaZYz5L1tkqrA2g9fywQwb8CgmEBlwFCOIsG0bmqb593Jd128j
      6rnCXmIYE4XBcRxIkgRJkmLPC97rJJnAcRxomjb0ToKTi0gTfPyKxSIcx0Gr1YqcYAzDgCRJ
      cF0XlmX5DMPPkSQJjuOgUCgknmh4n6LOH2CwXq8Hy7J8ri2Xy7HcJjYsEkDwL+rGlNIB4ooj
      nuDMIvYhzUMHiYgxhlKpBM/zsLe3N0TQcRAJIciEWQjV87xEK+9JQpwQxH8lSfK/c6Ll323b
      BqUUhUIBpVJp6F0G36fruv69oiaepEhzvuy6LprNJmRZhqZpoJRGvhDxBmGzdBihpUGa84Ni
      RBwBhjGR53nQNA2O42BnZwflcnnkzBx8tjBRLC8cJ/HHTRxhtMDHPu59eZ4H27ah6zoKhYIv
      XYhti/dvtVr+RJwHkoqZMn94cfkREdWhKPk0KCbErQZhvyWZ6cXfggMZvG+U/sJRKpVQKpVw
      cHCAcrmc+AVkmaWmZUZPyrjieHKRNsl1HL1eD7qugxACXddhWdbA74QQuK6baNJNA0mSEq8C
      svglrBNhMm/cAIiDK64UYeCzdpKHDyO4KCYbxXxh4LMUF//iZPBxl2jxurD2JomwlSvJ6hn2
      PUoXSgPTNOE4DjzP82ftcZlBlmXoug7HcWCaJjzPi+ybHHo0gKCsqyiKv1pEvUR+01GDIj5s
      GIONsiLF9TXNtYVCAc1m07d4BPsxCnGMHtfPcZGW+NIym+u6Q6tyUkOD67rodruQJAntdjtU
      XO71ev7xvFYBy7J8nSKO+AFA5uYq27ZHNswY87kLAFqtln+jsHNHEWMSq1DweJSINI7uARxZ
      s4K6TVKCiXqWUSLduLO/ruuglKLVaiW+Js09+YooruhRbYrPx02b7XYbwLClaNIQ6TJucpIL
      hQJUVUW9Xh+S0YLgAyDL/YWDm6/4b3EiQxKijJux43SGpDNSXD+4CTQLwkSwMN0krJ/jotPp
      jN1WlFjEfxO/x7UR/C62kfT6JOfmCQr0ZaZKpYJisThyBrZtG47j+NcoipJp9o2SO4MmRvHe
      cf2KMpnG9Um8F2MMjuMMzFJhfQmDuHqEmfvCGCLqLwvyEqfC2goqqMG+MsZCxQx+fJQIEtVu
      nohrkwLw5XpOzJIkDc1WonjQarV8q4CqqkMmxOBDj5Lt4pQw/nuUvVx8EWEPywc16kWIgy6e
      QwgZMPclsfCEET//LOpEeRL/pBE1ZnG/J20HSGZYEc9VVdWXQILIImL5VxBCUCgUUKlUYBiG
      TwCi04q/YK7ccFs6AN/ZkQVhIkTWdrISFKUUtm2j0+n4fZiEyJIEx80c4rsOesBHrcR5iF9J
      +sf7qOt6pKM2ixI9wDKUUmiaBlmWB2Z0cTbkaLVavsggyzJkWUapVIKiKJBlORE3hs0kUatB
      EjEorN2we4b97nkearWaP4j8nLCQiEkgqIBPywqRxUbP6SXJBBJksCixWFVVSJIEHrmQF4bW
      EkopVFXFzMyM752LGvxms+lzpCRJvtePW5U6nc6QGU3EKOVYXHm4LB20NCRFmKgUHHBZltFu
      t2MtQXmsVkFiHyUCRj1LVB/yWlGB4QkgKLKEKftiH9LeO3i+67r4/f/5JyiUKvjnP/hNSFLf
      upRGPI3DEAVxHUCWZZTLZRSLRf9GQXieh3a7jYODA98kyvUJzhg8ZiRqVg9bcvmMIxJGHrPw
      KOWYMQbDMPzVjR8LyvOjZuZRLyTu2qAuIV4jKpVxBJbnquF53sCMO8pUHBybtMwdBGMMdUfD
      nXYRH3z8KTRN802/eSDSEcYJU9d1eJ6Hbrcb2jk+GN1uF5ZloVqt+i+Lrybc3R28VvwcJmsG
      Zx5xUMXZJtgXceCD9xm1isiyjEKhgP39fRQKhVBjgIgkS7t4Lz7BBJGmnbjz+X2C4xNlIRsF
      TdNgmmbk+4vrR7APIqJWkKhzJdXA/e0diH6rPBxnsZ5gQoi/EnCbP4/P5qINfwA+M/HjN2/e
      xObmJmq1Wfz+/3kLbTc6wlQcorAhyDJ/MM+FZ9YhGbMDx73ODqgxP7oBQvq9yVP05i/7BOR5
      5tlgvRaoXkt/MSG599kz6yBKAUTSRp5LiwsghODm2i5c1x3yKo+DRKEQPLabE7hpmgCGvYOM
      MT+c4MqVK3BdF0tLS7j65BN4Z80Fo+G3G/UoWR6VOT14DKAzlwaOe7YFEjiWBsdpDcoTzOrA
      wxZo9fJJd6WPzh48YGiCCoIxBo8QwHXRtb1IBbhQKMB1XT+iIakIlliQ4g1xEUEkenEp4p7h
      7e1ttNtt/N0776Mo2bggbwAsPGxicng4iXVimKLhIGoRzGwgbnoL6l2mPIv//kc/xo/e+hla
      rTZawkpgmia63S5M0xzyx8Qh0Qrgd/qw0VKphEKh4N9QtPQw1s8s63a7ePeDT7B30MBXX3oe
      qiLj3ic9eLKe5pan+NyCwGMMUVwZalyQdXxcB1Bn+NUf/AzEs/D6s0uYm63hp7/6BDtdAoUC
      Lz6xiBeeeQK1WnWknpCKAfyuk37Gz/vvv4/5+XnMz8+DMTYQIbq4uAhNJlieK0NTZfz057+E
      t/RylttNFeIUuzRtACcgTk2Ts5k5Y1xMAGMeDMCffbQPIpuAvAQYBBaAX9zqYG3tz/Hbb34T
      s7VarC8jEwMAgKIo+NnbH2KuVsFj5xZQrVZRq9V80+nW1hZee/WruHLlCn7047cwUymj7jRh
      K9Wst5wajMMEJ+XQmjpQBZTE+4ASeYnDlHrFwBrT8X/f+muoigq9oOEff++NAUmFv7/MDNDp
      dND0dKw/0HDzwQaev9SGdm8drmPjzMoylpeXUa32Paurq7chUwL5WBlgsoSW10rwsCjVolIJ
      RDvfRCfViBZTW5aSMkW/dYJ7rQKIJAMtGTv/7X/jza8/jyuXL8G2bbz3/gf45fVPszOADyqj
      jSr++g4DPAdgLujHH0FXP4EkK1g2bFSKJazdW4dRVNBjDjyS7rZpHjwvHNc9w3wT08gUjPXT
      ZhVFGZpFufgry7Lv/4kKWPNBJBAy7K8IPfXQYZrWuccKNX8a3GQF/Ncf/hzPXr6BVtfBzX0J
      TF3JzgClUglnZw009vxeApICQIEn62gfHq43LSyYLXzhC09j9d464PaAUYMzSVAF8Oz+vzFI
      wgBZZvCwdh8WsYiXKOFBc9wzraqqT/g8WHIUCD10BnrOId1EnEcGo3KzgjHAq1zCe9t2/35a
      X/3O7E+mlOJ3/8E3UEY9dikjVML+g01c/+AjuFSHQ/XQ0AJeiygslZJ/DhvYtIMi1S7Bra/h
      JDXCaZzhR4ETIi+Fwt+FmAuRtvAXLc7Baz+IPYf7nuJiypKCAUPMlpkBCCFYmJ/Dq8+cBfOi
      NXra2oBj9wBtBnv1Fjyn76hwHGfIccE/84pi4p/nef5A8GM8OYf3ZyB2KMroTQhIoQavvRv7
      fJOelbNEvZ4kxBgxSZKgqqqfQwJgIAp4pPjD29QqYL3mJLsdD8ayMwDQH5TL55dBvF7o78xq
      gTkmMPcUXLOBsmJD6mz4MwVXmMSKbBzBZU+M7eG/ZSUiouj9pTdkFUgTvJUHsYYpk0kC7sZB
      allaCHERjwVNi1n6SRQdnm2mvm5sMIYSaY6vBNdqVajEQdBBzRgDaa7DAwGYB9NTAZeCzJwD
      JdSXGcVyGMBweAVfDXhJQX6NOMuEEyKLFnII6ccElZaG/DBhSmlaRAXsRXdncuHMeYAzgOM4
      UBRl4N2JoqyoBzDGEq4EDIxFZ/pNBIzhbLGHf/Hb3xxvBQCAhfl5XD1bCdUDiF4DYS5KzY+h
      OgegWhmEDqZd8n+jQp95ROmoa1KBKpCqF+Ht3QSc4dknsaktJKKVMQbTNMEY80t+BNMhXdcd
      Ohb8Pm3giq/4DKLIyld1XpQqlcx+nM/LGJa0Nv7tP/kWzp87Oz4DyLKMx1YqQ8cJIfC0GtDd
      w+LCAsrnnoVpnD+KiEyIsQg9Qg8ghIBoZdDaZXjN+4fiUDaEESyl1NdNuN5i2zZs24ZlWT7B
      8MDCoG4TjL/PG1ksV0EDBCFkwCQKwBdnxZUgQetIY5BIo2QPgTFU5Q7+zT/8Bubn5wCM4QgT
      US6XILVvwDWWADHi03OA0jLuWvNwJR04Znv+yOGnEujMebj1e5Bq+URJch2FE0GYfZ8fF8sN
      8nBzMRlokmOVhgkIIX7uNxBdETyd6HN4XbS5Ivz8McZkXmniX//gGzh7ZsWfuHJhgMuXLuOJ
      xffw6cYtuDOPA+RQSVV0oPYYjjsGlCPRUFEZ1JjrM8HM+bHvySNm/T6ExP1wk2FQ95FlOdbb
      Oi2IMzyk7bNcWoDT3gW0UuJr0jIB8Ww8OefiX/3j76FcLqN+sI+NO59i450f5cMA8/Nz2OsS
      uMWzqTl6FI4jXICoZaC7D6/9ALS4kG/bIzKigscm9azTp1X0wVwHNMYRNn77Nl46L+N3v/cm
      Hmxv4/rP/x/09b9Azd1CwarkwwAA8MYrz+Ctv7uBLdvIq0kfWcMECIbTIsNPJKCVc3Dr9wCr
      2V8VKun1lXEwcSbHlDIBwYCsKoqF405+zLUxu/+3eMLYwy//84+wKDVwVWtDpgAo8EEvRwZY
      XV1Fp9sDk8fPu8hb/k3SHqES5NolMNcGa25MLHkkTlSYrPlzOsUpSBq81jZocRFAv/IgtyR5
      nuebXUWzONeXJEkaYhjxHM/u4dniNp4x9oZuyxjwBeXu+FYgjo7ZQ7vngWSI8gtD3jNi4vYc
      E0QxcNwEM3njwFTO/yCSAkIlMLdv+QpOVtw8zK1m3CIlmpOBozAZboQYZU4mBJgvOPkxwLmz
      ZzBXJDgjPYBu3gNxzb4XOAPE0Nvg36hr/AeXVAAuGPNCFdEoeL0GoGTPWpuYDD+2j2BKVwAA
      pFCF197pfyZHe4MFt2Xin7nxQAzKE6MEfAddgneRGwN88blnYfYcNDwDtjIL0tyA13rQt7Pn
      DcaG/4LHCQWhMuAe1fcZ3SwDszogIyJFJ4kwZg+LHp1mp1laEFkD8fpONV5lkMcUcUbgxzkT
      KIriH+dxSMFzJUr7EkkMctMBCoUCqF5DnZX7rVZLkAB47R0wsw5SmMneOPPA7C7AXDCnB9Zr
      CPMZGQ5n4JYoswGmz4EcWhlG6gGEgCgFMOZmmi/Hmf3HUvYSGgmY3YHXCQsCJCEfA/WPuBod
      20/+Gwt8jwfzHD8cImguDvt34NqQZyeEAN1dXLI/wgtL8cF2uTGAafbQMh0gUOaFGrNgjTUg
      AwMwq9VnIM8BoyoIlUC1EqTZKxAHd0h5PPxXYh6cvVuQ5QuHItGoGx6uHo4JKMmtWcEXM2kn
      VmYQqb8qZm9A+BzyfIwJPMDAwA6/xowFY/0cEZLf5hmsu4/fUf8cX1puQKHHtAKUyyXMliQ8
      GNpohsC1OlBwNAzMMcFa2wA8MBBQvQYiqWB2F8zcB4jUD2Wjat85RcLd6qPNmxRy7RK85iaI
      Mdd3zMWin9VG9BrAXHjdA1BjbuSzp9Exspp0xwUDAFkbbyVOiSRPx5gH1tiAVDmb7R7BMWQe
      nmHv4sW5BuSYnGOO3BigH88yHNVHSD/+3t67BSop/dwBqoAUF/pZQZ4Hr7MLxjxQ1QCtXQZz
      LFBZBSHpy/ENgcqgRg1udx9SAuWWOT3AseC1t+A5Ngg8ECOZc2xSs/7Urig5gLV3QdTSYAjN
      OO15LlSnkfj83BjAth3YVg9MGnbly5Xlvozn2n35nMq+LEkkADNnB2U/pTDQ9ngphAxuZy+h
      h5dAql6AU78LqXoJEpXg7dyAFMIAQdtzHhh3dRh9zfRZgohehVtfB1GLvq42FqiMvy98G2f3
      foxX5vaP7hMxieQmeDmOgx4KMS+BAJLaf8gIcWYi1g3PARgDkQujzyUERC1Cnnuib58mFJB1
      ICRe/eiSfJTX8Zg8vL2HwUpEJAVSZRnu/m0wd5xaQYftEQLimljUjirExb2j3BjA9VzY7slm
      LoW20WuCqMXM1xN9Fl5rC1GK3Nj9i3nGrEScN9HzEuncASX2iTukxByHtCByoZ8ZltFvFATr
      tTCjDDNTGCPkJgIdHNTByHDZb+A4vJzR8LoHoLVLma+nhQo8pwPWa4FoZQDDprqw52N2t2/d
      GP4l8D1/sSR0tJ3su6qIye48CYZ/57kNYkl2nid8EmCHMf+GHL5qB99XbgxwZ20LTCpMl5Tp
      2UeizDggUuqkGdbaBNGrAWoMI002bFwMmzAI8U2KcfMJI8PXMwDE7fWLRGUAj7kRCxDwVUDM
      zxa3zT0pEELQcRX0XAJDeFxxxRLTVXNjgL1GKx8lJi8wD259PZfwZlqch7N/F8Q8gFS9AJDh
      eP/Db4DT6+s6VAIpJK/F7xsOhtoMOTdwTRCh11stwExuHQm2xxNdxIQdMadBDGE4aZRIBwVp
      cAXg9YzEukZAjjpAqz28g8xJgllNEEUfS/4/Qt86RNQSmNU+koFZf/b2CdG14TbW4TY2eC+S
      tT4Ri88gGP/LII7y8AJO4GLIQVjczsmCoa5fxs925iGqpDyIjkea8gC73FaARqcHYNjSclLy
      v9feBa1eiD1HjDeP+sxBCAG0ClhrE3CtvtPOc8Hc/iaClKBvy1ZKoIoO72AVUuV8YhFf9HFM
      yu5/5KRNHmfPFVxO5ACGstnCjp1cNhuBp87gL63fwN+sruE3yx/i5dn9ofI7vok+r9s2O1Yq
      fU5UniYyaxAy0u3PXyyXW/nA8K2gxG2hCCEgsgYmF+D2WqDFRVDPjvSsUj25xzWM2OOYYBRx
      hV87bGZN6rlWFGWgAoTYZ/6v67p+kjy/5kShlmCpV/HDzjxu3Hsf/2RlFWWtT2d8FQByFIE6
      5lAMRCxE4hMrIvCKcbwanG3bA1UVks6MhMhwD+5ilBgibuDHWL/IKycM27ZBCPGVPwCgpUVI
      1QugqhEfVjDRsjajGw8PHUnfjnieaAbln7n1R6wHNE2+B2LM4xPjVfxke0UIGhYqWeRxE8/z
      YDnZd+zjGTxiRg9fsga4NVBlIQ5S7UI/FNa1R8504qwmerHFWPMjEN+qFNsuAbJwwaQIKGum
      Nn8PwXBjvjc0V47552lRhEVQWcU79GX89ME8us7gOOQiApmmCSopQ9Uf4l6kmNYGHBEccDTo
      UZXjRuEofc4FjTGB8gJbQdNY0mfg95oEwebRptg3hmwehzgRdTqU3oTQZ/ET6w1cX/sI//rM
      +6goh8V982i7Xm8kCzcWwGcScYC5hYH/zoux8nOSFltijAGe25+pD/WAsOuSxJuPcqWL54h/
      UyQFAJjGKKDjB1GL2Co/jz+8f+kowyyPhjfu3+8XvsoJnPjHAfNcgAXFl3wRl6k1LRAZOKZa
      6iMDQmXctY5C3McWgRhjWNvcARJseHycYML/OcYRV9JeO2kr4FAS0ImZHccHYx5g9bdU8dzJ
      V4omTrefu0NyEIFM08T1D27k0a/ESCKWcIQRSl7EEpe3mxRpI2AzrzAhjzw1TOOY8IBDpyWd
      +J+tVNCy+waVsVeAz26t4gGbH7eZxMgSh5/G8RN1z7hY/XFEHm5iDTMKBP0UwFFdTm6u5SEJ
      3CsbiVHpvCcIImkA+olTx8GUrFDBWzt38P3ltfFWAMYY7q5vwaPqsY1u1hnw2OXyFLcTnW/i
      TjiyLMOyrEFrDmMD0Zf8ukTPxwYV9qkBlUAlCeyYNsrwXAdVqQNKxtQBPM/D2vbByA3npgVB
      O3+cpzWpOBLza6I+iWZEcUNnHnoslgLhfRP7yVeDkZ5XQuA1N2D36rGnCetcqOUorTlVMmYP
      NyIhg1ezwSWJeR4kNUHSUg4ghEJl/fDwsRig3W7jo7t7IPpiLh07DgSZIAqhsUBpkPD8MGsX
      908ksbGLoRrxoh4DrZyBPHMuUb/ygtfZhbN3C9SYA7Pb/bwEQgBCQPXZfj4w8w7Nxse0Kkky
      brQX8DXSHo8BdF3H4oyK+9lzLU4EYuDZuG1w5OUQS2v+TXX+CVhBqTEHUpiB194B1WsAVdEv
      gcLgtrbAGhugsgKpdIx6JAjWpMfw11u74+kAsizjq9cei8h8mn7kmXI4Lbb/afNDAH3bu1Re
      BlEMEEkGobRfjLhyBvL8k3AZhbN/NzwRaCIdIuiVLuGP8b3xzaCO457IzJI3cjdBnvCYTCMj
      hIEQAqV67nCViN8zmCOvZ6OqMb4ZtGc7yLOq10niYSCYzyMIlaHMnIXb3Ep0Pt81NBjJexQD
      5vl61CiMTbmPXzwDGrFPcBymzhSXI6bhuR628WW0XzswbMvUMPAoXTF8PhiunQRjrQCEEDz+
      2BW8eOkG3vvgtn+cDf5v8Lh4Pdf6AxYyDu+Qq6NfY+CigfRcF57ZBNm/HbxI7EB0yzwEmxCA
      JZFoAs9qdUZecYojEEJAFANecxNS5czocwO+E1mWB7ZmTcr8Y4tAsixjpaxhpZbOvBbnTeUW
      lbv1DSwW51CQjz/OaKezB4lKqAlJL6MGVXyGdw/WcHdivft8ghbn4ex8OvI8vglh0AKWJYAy
      F+F95dwZNO12qmviYmCOYtjZiUYwDiUVxugIQ89wwlrww6rPUFntR/Ie1/3yaOTZ555Fk+bv
      xibBHdSOEWH0w51TQQdVOLGdrPz9MMn/Ijy7B7CHjAEAoHZmdBnxhw1hJDSVsTQBTHPfRkGq
      XYS7dwsTtyObezB2fpUfAxzcD9t5ZDywEEWa4zhf8kBSiZCfHHvNxHv1+QSRVDCq5FIoNwqM
      MVy23sd/eOzdfBig0+mAmdmT4iNBsmay5nBr/m+A0cQCsGKtnEcJvHoGAFjWcBwML6EiVtMI
      gpsth3AoZrIxapkmwR5ZwF5Pyicpvk8IkyLU8Jo5JwWutIurghjFyaExBq1xF+RwmzZxszZx
      YfMO7d5S0Jk4XDD08D+G/rZoacaA9fc/dnqg+xZ/kMizHSrDrV6M/J3XCZVlGbZtQ1EUn6A1
      TfNzFDqdDnRdhyRJ/v6/PMSbR7CGWW6IWgJhk1sBCCE4UM/j08b1fBjg9q3bKMt5lCAMICRC
      cFJVGNIgiSv+6dp5PJ2gre3OHpjnYSnHYLBxJ4h3d++kMuGK1eMcx4Ft2zAMA5IkQVEUdDod
      aJoG0zR9BxY3ZYb2X9bg9lqQJ7WdE2Mo21u4MtfLJyf4k/c+RlHOLyl+1P2mAWJSylh9mpLn
      SQM+w4vfxZBs8bgYnqCq6tEu7l60yMycXn87q0DOQCwYC66xwsfD74T2p1PPxhPer7FiOOMz
      wM7ODrr3G9BJedymQnFSwk5sqotQKW1scYx7wacJIx6Jm4I7nQ5UVfWLYXEGEB1VpmlC0zRY
      lgVKKVRVhWn2d2+JSuKhxhzczfdR1XYhUXnAG8QOCZ1/pyCgpC9oMub1mcb/l4GAgTKAgqGh
      lWEXyviq8xZeW+knBo3NAPfXNlBwlUQtZcnn5ddNy8wfxNj9msLHSsLShUJ09haX6zXtyIOv
      63ro5/AOUFC9hucLRdT0Sp8BDmfy/j9HDNEn/mRm6abVwU8ffIIvXmyirB5a80ZeNQKV2gxs
      OBMjUIaTFXuS1yJNXrHuFKNBZs7iZqsfHk0OZ3lKKCRCIVEJ8uEfjdhCNwxFpYAXi00sGUKR
      gXE7ev78eVx57Wm03eT7A6QlhJNyPAVpf1xGDL3+IeUJx3FgmuZABGYQcXL+SBAJuzMXYOZo
      DnU8F0VpH7JA9WOLQJIk4YWXX0R95wCdG3tQJ5QgP81iEJCdOQgIPEzAhzIGqGujvP1B7Dm2
      7UBRZDDGCZ0Jm08AhBI4jguJUhC+fxgOFeioiE0S+OC5uCMruDJ7wZ/9x4FMJZhsFh47ALfa
      52IGJYTga2+8hh/t/h/Iu15sQdosCCOuPIpSnSIcuqTgWwvRfgAA6Ha7YIyhUCj4Zes1TfNj
      83m4sqqqAzH6iqLAsixompao1mvPsXDnYB2MMTw+e3EsSYASCtNbQNu+nZ8OwKFpGs48dQHO
      hCL5oohcrJcTd56IZEuzYFSLi1jNZenPVw46jglB13UUCgV0u12/liv3EItVvrnJk5s/KaVQ
      FAW9Xi9RPzVZxZnSInqe5TsNx8GccQ6f1Mu+eJvrVL24tIiOlywqNCknxxY7E4iw1+v5A833
      rBX/uKwq/haXNTTq1XA3v+u6sCxroE3+lyjPuP8AI8+bJjDG0O120ev1fG8u39CETxac+Pk5
      Yug796EkpYH7rQd4avYyJDr+vgNFtYg6+zbe3+s72XLbIgkA2q02VBLdZKYShQlpg+8pIN6H
      6w38N8bYwMsSSxGOA+4IchxnIFSCz3qx16a4D+8zt7OL5RPDEor4WIu5s3kYEwgh0HV94B6F
      QmHAH8DBC3uJps80xA8AS6V5rDe3cWFmJRfxuqSWsdH9CtT9n+W7AhQKGtwUCt3IDCtE039w
      dhX3FeCzDydMkSFE59U4gWw8voW3wxlM9IomfskJT+MyNP/MVzNxS6ng1lJ8h3e+zVSe4lGw
      Sl3wWNj3qGNxKKkGwBjqZisXMQgAZvVl3O19J98V4NLly/i59FOUkU9cUNJ0GD7zHOfWPGGJ
      McH7J3rRGeiRryx8xRO/i6sBXy2C+3mN7NcU+ivOz6xgrbGFntvDcmn8vZ8BYLgtxK4AACAA
      SURBVEYr57sCUEpRmokPiQirqBaFSqGMeq+ZS99S47jE8hShEHzVEbeQ4owfrBDNA87EKtKc
      CZJ0adogUQkr5QU4XrYo0WAKrp/XkWcnCSF46svPoOnmUxGhVqhAJhI22zu5tDcuJuWMS8pr
      3ILCiVvcOooTP18N+XdVVSHLMmRZPvmtS8dGtvyQOLEv92yOp75wFcsvXoSZolxiHGHN6lUY
      cgFrzU3fgXJSyOzsegjSKB8GiOPPTa78X9ECJZ4bZz5njOXPAJIk4SuvfRXVayuJTaJANBMQ
      QlDRSpgtVLF6sAb3GCsGjIMwoo9moIfLDHpSGCj7FMIAwX2luXGAf+ZmcJFhJpLPJ0kSXv32
      a9Auz8AJyfDPMpMaSgEr5QWs1tdzswSMxLFN2JO50ed9xRF1IhGiGRo4ytgTVwjfEjipzlFK
      8fI3XsGate3fjItFWUUZXS7gQuUM7tTXYU8waToPBJWtKKYnmbewTtaHLJhcj8ZD0NfBPcui
      7yGYqsqVf24oELfbJYTkawYNQlEVtN1+zMh2dw8zTy3g7/7uPUhUggQKSgmuzT+Vrk1JxvnK
      Gaw3N7FUnD+RqnF5Y+oEoOmk/4FxitKrxDCMIMKOTZQByuUy/t1//Pf46Ncf4pM/+XO01zbw
      wsJVKFK4NSJpwoxMJVycOYu62cRWexcXKitTvdzHPw+LJbhxomAzj8nUcWQfk4hxmnhND0op
      nrn2LJ689hRKlRJ6hcEYmWBMDv9NjOOJQl85ruBuY2NyD5AS6T2fJJbgRr30aWb8/DHebp9h
      OLaiNjKRIB8wHNAOeq7ly8fcUcM1eE70jDHfdS9q+dzdz7X6klrEnNa3EOUeiZphwhGVrOSm
      z+wzW5p6pfxYUD8ZwpTyVFhvxXHOwhzHxgBPPnsVxGEoNxV0DrfDFGNneJSguAKI8TxinDm/
      lq8OBVnDoj6Hu40NWK59XI8Ui+SplOPfK+7Ff65yJRI8S1pGODYGWF5eRsc1UVFKqBUqAx3l
      M73IyaKmzgPYxGOiex/ox41frJzB3cZ9mM707VkW9VKOgzyjEooifS+T7lBGTGKsJqoEi6CU
      4vGXnsbuu+vQJc1/KWJob/B8oP/ygi580ewVjG+5XD2Hu/UNrJQWxrYQdR0TLWtYYY8kkFCC
      6rvvycC3o8+m04PnejDtaKYlwYtZ8IfRGDRt+g2E/QPHc2GF5OLmS4DB2j2j2+8lyA9OXXGk
      1WqxYnECVd1CYNs23vnF29i5/wDuWge6pA3Froch7UN5zMPd+n0sleahZ2SCjeY2DswGdCWk
      /IdYbAk4pJwM8yZj6Do9mG4PVa2SqZ/jYrd7gDmjOsCZrudCJhKY8EiZyhfxelSH7bBgKE/Y
      dxEDzA50bROzehVnysP7Ume2lB0nA3BYloU//i9/hFJTSSyvZWGC9cYm5o3ZcCIegY3mNgyl
      gGohPWHGhT8ETb0Ns4m61cL5ykrq+4wD3o+PHnyGpxceP9Z7xyFuMtzv1tF1egMMMK6OcyKl
      jW/fug3Wcf3ZP9YicYgomTVqsCihOFdZwZ5ZR8dOXrIlD8Q9U9JnzRNBvWlaTadJiTkpzYiI
      euZj0wFE7Gw9gGpRMCk80TzNC4obBEIIzpQXsdnaget5KGvJV7qTrFg4qaytMLTtLn699Unm
      9qt6Becqy5mv5xj1zIwxUEJxp76Onc4+gCEJ6ejckGNRx0+EAebm57DlrkKT1NDf45bBtJ5R
      AoKV0gLutx7AYS5qiUWa45klT9pIqcsFPLP4RObrP91bza8zEeDvW1cKWC7O43Lt/MDxcXAi
      ItBjTz6O2rPLsLwjm/2kl+Xl4jxMp4fd7sHQb/ze9V4Lq/V1NKwWHNZXBD/3mAJpKLHPBCTX
      SnHACTGAoij45nd/A9qTVdiHKW7BWT9vBw4h/ZXAcm086OwN/e4wFxvNLawUF9DoteB6biqR
      KTMmuAQkja3KG3GRsGlldxE0R/3F9zfl0loGUErx6rdfQ1fPt1LBKKyUFuAxD9vtXb/oNmOs
      b/ZjDKqs4Gx5CRdm4jdrzg+TffYk4dh53suyLD+khYeriOVixFCXIJOEfRZBCYVMJbhesppL
      SXCiG1zpuo7nfuMlHDj9xPegNzgrRl27VOzvxrLdHtzYj4Edxuf3qxE/zAjTlZLkJ4wD7pSU
      ZXkoZst1Xb8aHI/7Ev8cxxn46/XCHYMe88YOdxHp48R3eHvs8cfw3G99GftWI/E1I+sJJXi5
      i8U5SETClpBwr0yosG88JpRonyBILjjjZjEviuBBjbxihfie+NZIQPiO7uKGg3ERwJqsws1x
      H+ETsQKJkCQJV595GgwMH/7k7zEj1BSatGI8b9Sw161jq72DpeI8JErhuA5k6cSH5fgw7hCL
      DnFC/DKIvCIFcETw4gofV6EiynkIACW1CNsb3pkns16R6aqcQQjBpSuXYcvewIOMsvHngVl9
      BgVJw1Z7B9VCBbvmsJVoopggjycRJ7kOkNlRFjg1KmhRPB7XX7EvYeivUN5A9HCcWBdsZyjm
      bOQDHhN0Xccb//S3sO4M1gCKYoI8vIAclUIZhqJjq7Vz/KbPDBNXEgKNe/EioSVtLwqM5adP
      ROksQdGMEuor3KJizRlCZAyxeh6AocLJU7PWE0KwsLgAo2iA2CTxSpAEI0MPAJTVIoqqkagC
      MR9kcWkH8luVRBk4mMcq3oOXQhSrH4jncLk7jND9YyP6EieOHJ7hn5fm+bOmenKPMH82TtC8
      Cp6iKD5xiyHzvK5q8LepYQCOymIVbC25lp+n72CpNI/7zW3MaOXYl8kHnVeE5ss7/8yJQQz5
      dhwnfGf5kNuIiUH8flx84C9PJHyRGIL1P8V+8T4P7tE7LtOOZ61L+864AsyJXhwbXv5EJHAx
      SZ6/NzHJauoYAFLf1JW0DHbamScOBUmFJqto9FqYKUTXOOUEKpYd5xAHl78EPuicAJNAJFz+
      fGJGHL9XmJMpeE+xdijf1+Cokfh+jCLS3mHyUdZ3kNZZx9NeuRItjic/FqQJUf8Q7yNJ0vQx
      wEuvfgV//uDH6NTbkCQJqisBHmDIBRSk8Nj+ccx2wWurWgVr9fuoFEqRTiJel1NkANHCEbYB
      RDBx5+iHYWcUr13DGPOrPofV9w8eE/8Vy8Xz68W9BfwxiB+i4e4K40UIwaXqOdxr3EdFLaHZ
      a2GxNA9NDo/xikPS1cBl3kjnXZiFKErfOZF8gDTY2dmBbdtYv7uG27+4gSqKmU1g4iDHiU4t
      u43N5g4en704Zu9Ho95tomm3c4moBMJn4iDRirixewtPzV1J3H7YWPdcG7vdfRAAjV4bFyor
      0JVC6lUhyXtcPVjDgjGLomqkajusL3WzOX0rAACYpglVVUEphWEYMAwDy8vLKBaL+PWfvo2q
      FC+jRyGJuGR7NraaO7nVoB/ZpxOPBx1ffNSkfvgIAMh0F9ud3X5eNgOKqoG23cW8XsV8cXbs
      e3k5ibyu5+H61o3pZIDV1VXcXb2D7bub6DILlmXhB//oB7j6zNOozdVw/Z330Gv1AI9B2nSg
      0PDHiEpIETGwEoBhvbGNs5Xl4604N0FfQJhpcUA+zvl+i8U5/z4uc9GxTayUF/DB9mdQJAWt
      XhuzRhUylcAAdKwuiqoBSohvgbNdBwwMjufCcR0QAKXDwESWsUS66IkGgI3mFmaNmelkgKtX
      r+LKlSu4c+cOzp8/D0IINK1PkMsrK1j+7X764N7eHv7vf/pDFIiGqjastKa1MjDG0LXN4y+3
      OKFFINGz52RACFM8ZSKjopUAAE/MXcJ6YxOLpTmsHqzBch20rc7h/l9bUCQFZ8uLuH+4O7zL
      POiyBtdzQQnFnlk/DGRkmQL4xN0rPc/DgdnA5er56WQAAFBVFU88EZ+oUS6X8dTr11CpzODX
      P3kbFc9IbRYNysdKyjCItFaM0D5kvjKkrZT9SENKSbK2osQTQyngiblLAIDyfBEu87DbOcDS
      4YrRsbt40NnHSmkRxmEOt9hWy+rg0707aFkdnCkvwnJtKJKcmBlEy1jdbKJhtyGBTi8DJMHq
      6iq++MLzUFUV5UoZv/jhX6LcVWNNqHEE27WT72cgtsU/Z7ZGZboqL+QXX58UlFBQQrFcmveP
      FVUjVrEtqQaeWXwCzV4L643+ZinLpfnERQtEv0jHMbGgz0KVlekJhYgDYwztdnvo+PbWNv70
      j/8EruvizNkz+O6//D56c4iNFuQ24TCT5O2DNT/dLmm/RBf9pIP3ThLHEZcVd2/+V1KLeHLu
      MlbKC7BThEXzMuqUUlSNCtp2p08HE+x3brAsC+/+/btDx7/6ta/iN978tm/zLhaL+M3f+wfo
      lMMTJoJm0OCL8zwPUg770D5MSEK6Y4l3Y4RXc0QGxqVsg//pSqHfL7CHQwTSNA2vfv3VgWOe
      5+HevXu4eHHQVl8oFPDYS1dx5/99CF0uhA6+GGsjMkVB0XCnvoGLx5YN1kdW8hhH7BIaGfPy
      6OsnFSR3eGfcq9/HXvcAviuRHGkER7FOBP3/jhxhtutAk/ui8kPBAGGglOL6u+/Bcz1cvnJ5
      4LczZ8/gQ+8d6EhWEIsP1uOzl/DZ3iocz4WcIChORJ4hGZPGgGc0wflhhoVRzzrK/Jq0nzG/
      4sLMChYOlegk4PdvmC18ur8Kxh6SFSAKb373O8OxLQAqlQpgSGD24AB6zEPPtWE6JnquDcu1
      4MCDJwFEpejW25jVZiBl3EH+uJXgcUUTQtJv0DRNTJ716Q1VR0HSHh4RKAqapvn+ARGqquLK
      l57Er//qXTAJkDQZhYqB8kwZBbWEWtFApVLB7Nysv5/u2toabr31AarqkT8hDxPnNGNcBgIe
      zjEiINjt7KNjmw83A8Thpa98GU8+/ZSfNAEMvrRgXuqZlTOoP3+AjU/vgdVtLOg1yOSocvXD
      9IJTgRytBnExQyKy5mocV85AVFsclBCcnzmDvc7B55cBCCHQdd2vRBD2O3D0AhVVwfMvvYDn
      XriG/f19fPz+R1i/dR8zrIiyYiQOzxbbT/zypkCqyCPzTkTU80+DydhjDPVeE4vFuc83AyiK
      AlmWYduD9mIxbl58UTz8eH5+Hl//1mvwvunh5s2buHvjNjqbDZRhoKQWJ246HIWeY6Fld3Jp
      a5J7Lo8rHo3M5EvBROLq4zEP+906rs5fmf5w6HFhWRYajcaQsiwmbnNE+Qa4I+7e6l2sfnQT
      7p6FJX0utaUoDAfdBlpOB+fKg+HQcVGin+3egaHpUKiMMBrpPwML/S2IsmrAUPSUvR4faa1I
      Qdieg9X9NTw+ezExI/DJ7k59HYZiYMGoff4ZgDGGZrOJTmd4xhQzhbhewHcfF6/nidXce3yw
      f4AbH9/A7u1NKB2CGbUcGZE6CmEMcLO7hvJyLXKlYWCw2xZmzWLmDUDyQDDnOCmSnJ9k1eg6
      Jh6093FhJvneCrudfWx39vD0/GMApqAu0HEgqtCSmNwuyzLK5X6egWVZ6HQ60DTNL+snXlOu
      lPHil1+E96KH7e1trH58E+u376NGS5gJiUodicC7Li/M4Dd/+82RXus//YMfouCpJ7azu5iP
      G8x4ExP2xdzcvIgfAFRJSbX3g8c83Ny/i2tLV/1jjwQDGIYBy7JCGYG/EJ7mCPTNq7yoEwC0
      Wi1/Iz8RlFIsLy9jeXkZeB24dfMWbn90E+6eiQoZzlwLg+n2YHk2uo7p8wFDeAgBT5Pk/f7S
      t17Gr/7ib1HrHf9KIMZU2bbtMymvzADAPy5a3EZZgtLoCxKRUJBVdG1z5C5AhBBYjg1NVgfC
      3T/3IhDQH1TTNFGv14d+4xvuFYtF6Hq4LOy6LlzXhWVZME0zdgNvQggajQYebG3DskcHa3EX
      vr/vGAFqtVksLh1tA8SJS5xh+f0ZY/jlX/wCuNeFLqffCmociLnGvJ9Bkyr/PJSLHBXfk1Jh
      blpt1HtNnC0vR66D/F736vfhMhcXZ876vz0SKwAh/TJ9PMFcPM7Bld2wF8N1A1mWI1cSDsYY
      yuUyyuUMolBMm0GrlbhCvPTay3j7Z38La60HNWLTkUmAiz/iDD+u7T5NPofjOCirRaw3tuAV
      3YGaTrwAAB8nz/NACYGhlNBz+3sMMExRZbhJg1IKXdeHBpj/dbvd0LAKEXlENo4Dsb9iPyil
      eOVbX0N3vq8YkoyhHGkhVloQ9RTxe5j+kpcewM+RKIXtOLBt299QnVen5qIrYwy6VMBBp471
      gy3cb2xjs/ng0VgBOAzDgOu66HaPFCdewoSxfqm9uKKtYvm9k0DQUyt+9zwPr775DXzy4Q3c
      fPtjnNMWT0w5ToNxHWOu54J5HhRJ9kux8zbFQlmMMZQUA0VZ91ctz/MenRWAy9BhBM4HbdQK
      IElSLINMGnwpj1qJCCH4wrVn8PrvvYktegBvCsM38vQAy7KMzdYDPyKUVxLh4qpo2pZl2X9/
      3OAhSdKjwwAciqIMxQGFiRVhIITAMIyBnepPAnH9dF0XhmHgwnNXYHvjbSRxUki6whJCYHkO
      dLkwUAiM/3EGENMhg6LZI8cAsiwjyuolOr3CQAiBLMt+Dfw8Ic7ueeDJq0/hQD/e/ZGTQpxw
      sjjSBtrCcDWKVPnJme/8ECNshxIAscTPQQgJDcEeB5NQrgkhmLuwmOtuKnkgyXNGKc9h8Fi/
      /tCo84O/+XrCyDt8zsCXxaBdGoC/N1XcS+KrQBQTjYs8mUE39FTbijLAP58h/Ww6CUTdnxCC
      PauOrtQbGcvkMQ+OF67fPXIMAPRXgKhZvN1uj2QCSZIinWZ5IC8mePzJJ3BAh6tpDN0PDFvm
      LjalfRSeqaFRtdCo9nAfe1j3dmC78caBpMjKTPfbD7BvNrDLGgO+kF3rAAYpYJc1sF/o4EDr
      YNc8GIhwbVkdtCoOttQGts3h7XEfCU9wEFze7na76Ha7Q6IPpRSapvmxQRxBx9nBwQEsK5+N
      m4POtbxm3xsf3cDa336GBa0WaRbd69Vx6RtXceHSxQHl0bIsuK6LH/7+/8JleQU0x70Awhxe
      Uc+72zvA7LUz2Lh1D1qTgkgE6nIJC+eXsHJ2BcsrK75etr21jQ/euY691QfQHBkHdhOPvXwV
      WxubqM7VsPv+BubUGT+/45FkAA5u+my1WgOZYxyqqqJUKvm+AkVRBl5Su91Gq9XKTWQJ7gyT
      R0YUpRTbW9t4+8e/wAqdDU3s2ZbreOP3fivStNrpdPDzn/wMlYaaqmxklNwd5e2NYoCO04Vy
      sYyW28FMrYpr165haWkpdoKwLAubm5soFUugEsWH73+AZ689h53dHbz9l79EZV+FTKVHmwE4
      uCe41WoNzcSqqqJYLMKyLOi6PqA72LaNVqsVuadtmvsHCUFc6vNghGajiXf/5h2Ym00sqbP+
      auAxD/UlB6+/8a3IYEFC+rvP/OLP/grSfQdGwpijJISehAHaThd32Ta+/u1v4IUXXkh07ygw
      xvA//vsfoH1rHxcrZx5+BsgrxY4xhk6nMzSjU0pRLpd9pVeMEq3X60P6QhZCjWIAsQ9i7H1c
      LFIcKKVot9p47+13Ya02UJYN7CltvPr911EohBO1GIAnSRLe+qM/RaWujtxLLS/lueuYsM8r
      +PIrL+P8heRV++JgWRZufPwxVt/77JQBgm2FJc/oug7DMHzvIj93Z2fHD7jieQOjGCDM/j2K
      AcKiK8eBoihYv7uGzz78BM++9EXMVGeG2ozSQe6sruLWn32I2cJM7D3yeB8e89Cd8fCdf/a9
      SAYdB71e7+FngLzBGEOj0RiIFwL6OQKlUslnAs/z0Ov1fJGo2WwmUojDmCSMqMNqlwajQcdF
      HDNFMQBjDD/5wz/BYq8yMvyYnx88FoTt2vAOsyFkIsFmLh50dlG7uIg3/tF3UCwmy63IgkfS
      DBoHQghKpdKQmbTX6/m5AMBRdCmPLSkUCok3wMvSp0nY5LMwESEET7/0DBpWK/J33nbS9ltO
      F3ewDfpYETd6d7FTauFL3/8avv/P/yFKpdJEfRGPVDRoUkiS5GeRiS+x0+mAMYZisTgUA6/r
      OhjrJ8+nldHDCCWYm3DcDqm4mfvyY1dw/Rd/jyorD/U9ypIUhabVhgMHuqNA0hV8/c1v4tq1
      a6GOykngkWcAMa9VRNhszhVlnlwjQgyUq9frY4soYYQlpkSGQZx980BUgpDjOLjyzBN48Kt7
      mFFLsW3Eij5efyukVsUBkSS88sor/bKWx4hHngGiiGVUxGUYcRDSr0VkGEbofgbj9G0c608U
      xlGorz77NLrdLhof7aKipNchO04XH7dW4RGGLzz5LL7z3e/kHmOVBI+8DsCX2qDM2uv1IuXu
      uLwBLj6Vy2U/uT4oyqTVFZKKP2mV4yR6RZyS/NIrXwbOqLEBd2HXN6022nYXhm7gxVe+jN/5
      we+cCPEDpwzgo91u+39c1hfjykXYth07G3MmmJmZQaVSCc0/SIpJyv5RIk7wnKj+ep6HZ770
      HNa7D1Ld98BsgJzXUV2Zw+vfej3VtXnjlAEOoWkaLMvymYCbNMNmScdxsL+/H2v25DM9Z6Ao
      ZorDpKMxk64YcefNzc/jG7/7BjboXuJy5ecrK1i7cQdfeeUrJ5phB5wyAIAj2b1arUJV1Uhb
      vQjHcdBoNEbK5YQQ33vMGSENUU8iVyALovrMGEO1VsUTX7qKlhWv9zDGsNetY7uzB1pRcOVK
      8h3qJ4VTBhDAzZmijC6aA8OYoNvtjrTMaJo20GbS1UDMnJoEE6RhxLhcZMYYZqpVv9xI1D1M
      p4dP6qv4rHMX1754bWI5FWlwygAC+Gxdq9VQKvXNe8G4oCDa7TZMM357Vb66lEolKIqSSRzK
      G1k8ynHnLi4touV2/WcKmzB0pYCXl65hzqihMMF8ijQ4ZYAAeCx8oVDwRSLRchN8qZ7nwTRN
      3zQa1Sb3FvOYlrTEn3fOcFbw+4f1Zfmpc+i5VuyzdZwuystVqMrxFfCKwykDRIAzQrlcxszM
      DGq1WmRAVq/Xw97enm89imtTURQ/fOKkUg7zCKgLgjGGL37lBex48U7AgqRhRitj/2A/1/tn
      xSkDxIAzAff8GoYRmQrpeR46nc7IxHoeXl0ul/0gL1FsGAW+EmRZDbIo4VF9CIOu61AWDMQl
      jslUQn1zH7O12bH6kBdOGSAFJElCsVhEqVQa0gcY65dUGaUPcCKUZRm6rvvFnLIE0uXt9Ep7
      36AOwRjD819+Afexj93eQfT1XQdXrz6VS1/GxWk4dAYw1i+j2O12hwheURTUarWRBM0Yg23b
      aDabcF03tuJ0HNIQdlwOwrgQI1YpoVhfW8O7f/k27EYPF8orA/nIHvOgPlfD69/+Vm73z4pT
      BsgIPuM3m82BlEhJklCr1UZWj+PJN5yBsjIAEG6dGnV+MM4oSxgFEG8mlmUZ7VYLf/NnP0f3
      oO8jIF0Py8Y89godvPG738XcXPKNrieBRz4YLiu4ZYfnC4tiQVSEqQgxMww4KtbFg94mae0J
      C7UOJrEkYQiRCcKe1XVdGMUi3vjBdwD0n/HWrVu4/tNfwXJcNBqNE2eA0xVgTPCwCFH5rVQq
      MAwj9jouArXbbf9a0cSYhgmyBNeNyjUYxQRBcSqsjbBVgW+oIUkSqtXqxJKIkuJUCc4BweSN
      TqcztDVrENwkyp1jXGTKy1IThyhvLme8JMwn+iXSepT5s5+kI5DjlAFyQJBYeK2hJCIE35yP
      5xuLv00ScWENacIv4s4LM9lSSlEoFIY2KzkpnOoAOSAsP8CyLFiWNZQPEIQ468/MzPg7VPIN
      5pISYRbPctZrg22IGNUWLzEzDcQPnDLA2IgSF3j6ZJrlngfOSZKETqfjJ+GPmo2D+btBhXYU
      xlG4OQOJjBSVLcf/PWm5X8T09OQhRlQCN68kkRaU0gEHWdLIUfGzaJefFMJykLnIw30bSZLm
      TxKnDDAmuAwfldiRJeQ3GB6RlJCDTHAcEH0IQQ+xuHpNG+FznDLAmOB7TZXLZRiGERotCqQP
      W1BVFZVKxReJklqGgkQoWpWOy7IUZFreF75f1zThVAfIAZzAeFkUsTYQD5N2HMdX/pLIwFx3
      kGXZL9o7SikO6gLB9oLn5YGwPkX5GJLswHPcOGWAHCBacnj0KK8a3ev10Gw2/RLrfJVIqhQT
      0q9UxxXjccUJ3qa4UuQFUfcIk/2nUQw6FYFyBrftVyoVv1pct9v1FeJROQNh4IyTpEZm0pl+
      0mbIoPgTtzqdJE4ZYAIQk2lEhw9jDKZphm7GkaTNQqEwUJ49DEGCi/PsTiIpJqiIx4lH04BT
      BpggKKWoVCoD+wvwFSFL5Cel1BeH4hC0wojHOEzTRKvV8oPv9vb2ItullKLRaEQSb9SqM+0W
      IOCUASYOQvqVJsSAQ8uyEpVUCYOiKAMMlQZiaML6+jo+/vhjEEKwubmJDz/8ELIs+5t+cOYR
      /5VlGY1GA6ZpghCC3d1dXzkXEcyPPmWARxxh4ktWouBtFYvFsTyqfDXhxcAMw8D6+jparRZu
      3boF13Vx/fp1fPbZZyCEYGNjA3fu3EGz2QQAXL9+HZRSvPfee0OhDdMm5sThlAGOCTwIjH/W
      NC0zofC9CYI1jKIQxWyLi4u4ffu2X76Rh2YXi0U/aV908O3t7eHChQuoVqtwXRfLy8uQZTmy
      IoboD5hWpjhlgGOEpmkwDAPVajXUaZYGfAbnexVEtRUlg6uqimq1imazicXFRWiahqWlJT+K
      9eDgAPPz837egqZpuHz5Mt5//33cvXsX1WoVH3zwwVCpeNHxJoZynHQdpCicJsQcIyZhCuTV
      KLjzLUkCCwB/b7Ogx5a3KaZNcru+uFEfAD+xhcf98HOj9lvg3u1pwqkj7BgxiRmQ+wgsy4Lj
      OJG5xcEITR7CHXRccatQlIIeZLAo727Ys05bGARwKgJ9LsAV41FhFnEJMMH2kjJrVDqluCKE
      RY1OC+QkOxueYvrheR4kSRqZihnnEAuGMCQlWDEnQLzOdd0BBuEWp2nCnPvcwwAAAAZJREFU
      /weAYAy/NPfyFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='MappingChallenge' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Maps Using MapBox' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State Sales' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
